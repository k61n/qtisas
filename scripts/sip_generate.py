# **************************************************************************** #
# Project: QtiSAS
# License: GNU GPL Version 3 (see LICENSE)
# Copyright (C) by the authors:
#     2023 Konstantin Kholostov <k.kholostov@fz-juelich.de>
# Description: Generates pyproject.toml for sip
# **************************************************************************** #

import os
import platform
import PyQt5
import sipbuild


def find_resource(resource, paths):
    for path in paths:
        for root, dirs, filenames in os.walk(path):
            for filename in filenames:
                if filename == resource:
                    return os.path.join(root, filename)


if __name__ == '__main__':
    # generates pyproject for sip-build
    pyqt_root = str(PyQt5).split("'")[3]
    if platform.system() == 'Windows':
        pyqt_root = pyqt_root.split('\\\\')
        pyqt_root[0] += '\\'
        pyqt_root = os.path.join(*pyqt_root)
    sip_includes = find_resource('QtCoremod.sip', [os.path.dirname(pyqt_root)])
    sip_includes = os.path.dirname(os.path.dirname(sip_includes))

    if platform.system() == 'Windows':
        sip_includes = sip_includes.replace('\\', '/')

    FILE = f'''
# **************************************************************************** #
# Project: QtiSAS
# License: GNU GPL Version 3 (see LICENSE)
# Copyright (C) by the authors:
#     2023 Konstantin Kholostov <k.kholostov@fz-juelich.de>
# Description: sip project file generated by scripts/sip_generate.py 
# **************************************************************************** #

[build-system]
requires = ["sip >=6, <7", "PyQt-builder >=1.6, <2"]
build-backend = "sipbuild.api"

[tool.sip.metadata]
name = "qti"
requires-dist = "PyQt5 (>=5.15)"

[tool.sip]
project-factory = "pyqtbuild:PyQtProject"

[tool.sip.project]
sip-include-dirs = ["{sip_includes}"]
'''

    qtisas_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    with open(os.path.join(qtisas_root, 'qtisas', 'python', 'pyproject.toml'),
              'w') as f:
        f.write(FILE)

    # outputs path to sip-build
    if platform.system() == 'Linux':
        print(find_resource('sip-build', ['/usr', '/home', '/root']))
    else:
        sip_path = str(sipbuild).split("'")[3]

        if platform.system() == 'Windows':
            sip_path = sip_path.split('\\\\')
            sip_path[0] += '\\'
            search_dir = os.path.join(*sip_path[:sip_path.index('Python') + 1])
            print(find_resource('sip-build.exe', [search_dir]))
        else:
            search_dir = os.path.join('/', *sip_path.split('/')[:3])
            print(find_resource('sip-build', [search_dir]))
