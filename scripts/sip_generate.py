# **************************************************************************** #
# Project: QtiSAS
# License: GNU GPL Version 3 (see LICENSE)
# Copyright (C) by the authors:
#     2023 Konstantin Kholostov <k.kholostov@fz-juelich.de>
# Description: Generates pyproject.toml for sip
# **************************************************************************** #

import os
import platform
import PyQt5
import sipbuild


def find_binds(path):
    for root, dirs, files in os.walk(path):
        for file in files:
            if file == 'QtCoremod.sip':
                return os.path.dirname(os.path.dirname(os.path.join(root,
                                                                    file)))


def find_sipbuild(path):
    exe = "sip-build.exe" if platform.system() == 'Windows' else 'sip-build'
    for root, dirs, files in os.walk(path):
        for file in files:
            if file == exe:
                return os.path.join(root, file)


if __name__ == '__main__':
    # generates pyproject for sip-build
    path = str(PyQt5).split("'")[3]
    if platform.system() == 'Windows':
        path = path.split('\\\\')
        path[0] += '\\'
        path = os.path.join(*path)
    path = find_binds(os.path.dirname(path))
    path = path.replace('\\', '/')
    FILE = f'''
# **************************************************************************** #
# Project: QtiSAS
# License: GNU GPL Version 3 (see LICENSE)
# Copyright (C) by the authors:
#     2023 Konstantin Kholostov <k.kholostov@fz-juelich.de>
# Description: sip project file generated by scripts/sip_generate.py 
# **************************************************************************** #

[build-system]
requires = ["sip >=6, <7", "PyQt-builder >=1.6, <2"]
build-backend = "sipbuild.api"

[tool.sip.metadata]
name = "qti"
requires-dist = "PyQt5 (>=5.15)"

[tool.sip]
project-factory = "pyqtbuild:PyQtProject"

[tool.sip.project]
sip-include-dirs = ["{path}"]
'''

    qtisas_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    with open(os.path.join(qtisas_root, 'qtisas', 'python', 'pyproject.toml'),
              'w') as f:
        f.write(FILE)

    # outputs path to sip-build
    if platform.system() == 'Linux':
        print(find_sipbuild('/usr/bin'))
    else:
        sip_path = str(sipbuild).split("'")[3]

        if platform.system() == 'Windows':
            sip_path = sip_path.split('\\\\')
            sip_path[0] += '\\'
            search_dir = os.path.join(*sip_path[:sip_path.index('Python') + 1])
        else:
            search_dir = os.path.join('/', *sip_path.split('/')[:3])
        print(find_sipbuild(search_dir))
