stages:
  - .pre
  - build
  - sync

SAST:
  stage: .pre
  image: iffregistry.fz-juelich.de/qtisas/qtisas:util-0.0.1
  script:
    - git submodule update --init --recursive
    - mkdir libs
    - tar -xvf /root/Linux-x86_64.tar.xz -C libs
    - mkdir build && cd build
    - cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_BUILD_TYPE=Release -DPython3_ROOT_DIR=/root/venv-qtisas/bin/
      -DWITH_PYTHON=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    - mkdir -p qtisas_autogen/include
    - uic ../qtisas/sans/ascii1d/ascii1d.ui -o qtisas_autogen/include/ui_ascii1d.h
    - uic ../qtisas/sans/compile/compile.ui -o qtisas_autogen/include/ui_compile.h
    - uic ../qtisas/sans/dan/dan.ui -o qtisas_autogen/include/ui_dan.h
    - uic ../qtisas/sans/fittable/fittable.ui -o qtisas_autogen/include/ui_fittable.h
    - uic ../qtisas/sans/jnse/jnse.ui -o qtisas_autogen/include/ui_jnse.h
    - uic ../qtisas/sans/svd/svd.ui -o qtisas_autogen/include/ui_svd.h
    - source /root/venv-qtisas/bin/activate
    - python3 ../scripts/sast.py

clang-format:
  stage: .pre
  image: iffregistry.fz-juelich.de/qtisas/qtisas:util-0.0.1
  script:
    - source /root/venv-qtisas/bin/activate
    - python3 scripts/clang_format.py

macos-arm64:
  stage: build
  tags:
    - darwin, arm64, ventura
  script:
    - git submodule update --init --recursive
    - mkdir build-marm && cd build-marm
    - /opt/homebrew/bin/cmake ..
      -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++
      -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt@5
      -DPython3_ROOT_DIR=/opt/homebrew/opt/python@3
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON 2>&1 | tee configure.log
    - /opt/homebrew/bin/cmake --build . --parallel $(sysctl -n hw.ncpu) | tee build.log
  artifacts:
    paths:
      - build-marm/configure.log
      - build-marm/build.log

macos-intel:
  stage: build
  tags:
    - darwin, intel, ventura
  script:
    - git submodule update --init --recursive
    - mkdir build-mint && cd build-mint
    - /opt/homebrew-x86/bin/cmake ..
      -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++
      -DCMAKE_PREFIX_PATH=/opt/homebrew-x86/opt/qt@5
      -DPython3_ROOT_DIR=/opt/homebrew-x86/opt/python3
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON | tee configure.log
    - /opt/homebrew-x86/bin/cmake --build . --parallel $(sysctl -n hw.ncpu) | tee build.log
  artifacts:
    paths:
      - build-marm/configure.log
      - build-marm/build.log
      - build-mint/configure.log
      - build-mint/build.log
  needs: ["macos-arm64"]

win11-x86_32:
  stage: build
  tags:
    - win11, x86
  script:
    - git.exe submodule update --init --recursive
    - mkdir build-win11
    - cd build-win11
    - cmake.exe .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_MAKE_PROGRAM="C:/Qt/Tools/mingw810_32/bin/mingw32-make.exe"
      -DCMAKE_C_COMPILER="C:/Qt/Tools/mingw810_32/bin/gcc.exe"
      -DCMAKE_CXX_COMPILER="C:/Qt/Tools/mingw810_32/bin/g++.exe"
      -DTIFF_ROOT="C:/Program Files (x86)/GnuWin32"
      -DZLIB_ROOT="C:/Program Files (x86)/GnuWin32"
      -DPNG_ROOT="C:/Program Files (x86)/GnuWin32"
      -DCMAKE_PREFIX_PATH="C:/Qt/5.15.2/mingw81_32"
      -DPython3_ROOT_DIR="C:\Users\kk\AppData\Local\Programs\Python\Python311-32"
      -DWITH_PYTHON=ON | Tee-Object -FilePath "configure.log" -Append
    - cmake.exe --build . --parallel $env:NUMBER_OF_PROCESSORS
      | Tee-Object -FilePath "build.log" -Append
  artifacts:
    paths:
      - build-marm/configure.log
      - build-marm/build.log
      - build-mint/configure.log
      - build-mint/build.log
      - build-win11/configure.log
      - build-win11/build.log
  needs: ["macos-intel"]

ubuntu18.04:
  stage: build
  image: iffregistry.fz-juelich.de/qtisas/qtisas:bionic-0.0.5
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON 2>&1 | tee configure.log
    - cmake --build . 2>&1 | tee build.log
  artifacts:
    paths:
      - build/configure.log
      - build/build.log

ubuntu22.04:
  stage: build
  image: iffregistry.fz-juelich.de/qtisas/qtisas:jammy-0.0.3
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON 2>&1 | tee configure.log
    - cmake --build . 2>&1 | tee build.log
  artifacts:
    paths:
      - build/configure.log
      - build/build.log

rocky8:
  stage: build
  image: iffregistry.fz-juelich.de/qtisas/qtisas:rocky8-0.0.1
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON 2>&1 | tee configure.log
    - cmake --build . 2>&1 | tee build.log
  artifacts:
    paths:
      - build/configure.log
      - build/build.log

rocky9:
  stage: build
  image: iffregistry.fz-juelich.de/qtisas/qtisas:rocky9-0.0.2
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake .. -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON 2>&1 | tee configure.log
    - cmake --build . 2>&1 | tee build.log
  artifacts:
    paths:
      - build/configure.log
      - build/build.log

sync:
  stage: sync
  image: iffregistry.fz-juelich.de/qtisas/qtisas:util-0.0.1
  rules:
    - if: '$CI_PROJECT_ID == "1655" && $CI_PIPELINE_SOURCE != "merge_request_event"'
  script:
    - git remote add mirror https://$GITHUB_TOKEN@github.com/k61n/qtisas.git
    - git fetch mirror
    - git push -f mirror HEAD:master
