stages:
  - .pre
  - build
  - tag
  - deploy
  - upload
  - release
  - sync

SAST:
  stage: .pre
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_DESCRIPTION !~ /.pre=skip/ && $CI_PROJECT_ID != "1655"'
  tags:
    - darwin, arm64, ventura
  script:
    - eval "$(/opt/homebrew/bin/brew shellenv)"
    - git submodule update --init --recursive
    - mkdir build && cd build
    - /opt/homebrew/bin/cmake .. -G"Ninja" -DCMAKE_BUILD_TYPE=Release
      -Dgl2ps_ROOT=/opt/homebrew/opt/gl2ps
      -DGSL_ROOT=/opt/homebrew/opt/gsl
      -DHDF5_ROOT=/opt/homebrew/opt/hdf5
      -Dmuparser_ROOT=/opt/homebrew/opt/muparser
      -DTIFF_ROOT=/opt/homebrew/opt/libtiff
      -Dyaml-cpp_ROOT=/opt/homebrew/opt/yaml-cpp
      -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt
      -DPython3_ROOT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/Current
      -DWITH_PYTHON=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    - mkdir -p qtisas_autogen/include
    - uic ../qtisas/sans/ascii1d/ascii1d.ui -o qtisas_autogen/include/ui_ascii1d.h
    - uic ../qtisas/sans/compile/compile.ui -o qtisas_autogen/include/ui_compile.h
    - uic ../qtisas/sans/dan/dan.ui -o qtisas_autogen/include/ui_dan.h
    - uic ../qtisas/sans/fittable/fittable.ui -o qtisas_autogen/include/ui_fittable.h
    - uic ../qtisas/sans/jnse/jnse.ui -o qtisas_autogen/include/ui_jnse.h
    - uic ../qtisas/sans/svd/svd.ui -o qtisas_autogen/include/ui_svd.h
    - python3 ../scripts/sast.py

clang-format:
  stage: .pre
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_DESCRIPTION !~ /.pre=skip/ && $CI_PROJECT_ID != "1655"'
  image: iffregistry.fz-juelich.de/qtisas/qtisas-ci/util:0.0.14
  script:
    - python3 scripts/clang_format.py

macos:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_ID != "1655"'
  parallel:
    matrix:
      - { ARCH: "arm64", QT: "qt", BREW: "homebrew" }
      - { ARCH: "intel", QT: "qt@5 -DPREFER_QT=5", BREW: "homebrew-x86" }
  tags:
    - darwin, $ARCH, ventura
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - /opt/$BREW/bin/cmake .. -G"Ninja" -DCMAKE_BUILD_TYPE=Release
      -Dgl2ps_ROOT=/opt/$BREW/opt/gl2ps
      -DGSL_ROOT=/opt/$BREW/opt/gsl
      -DHDF5_ROOT=/opt/$BREW/opt/hdf5
      -Dmuparser_ROOT=/opt/$BREW/opt/muparser
      -DTIFF_ROOT=/opt/$BREW/opt/libtiff
      -Dyaml-cpp_ROOT=/opt/$BREW/opt/yaml-cpp
      -DCMAKE_PREFIX_PATH=/opt/$BREW/opt/$QT
      -DPython3_ROOT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/Current
      -DWITH_PYTHON=ON
    - /opt/$BREW/bin/cmake --build . --parallel $(sysctl -n hw.ncpu)

windows:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_ID != "1655"'
  parallel:
    matrix:
      - { ARCH: "x64", TOOL: "msvc2022_64", USER: "admin" }
      - { ARCH: "arm64", TOOL: "msvc2022_arm64", USER: "jcns" }
  tags:
    - win, $ARCH
  script:
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake ..
      -Dgl2ps_ROOT="C:/qtisas_libs/$TOOL/gl2ps"
      -DGSL_ROOT="C:/qtisas_libs/$TOOL/gsl"
      -DHDF5_ROOT="C:/qtisas_libs/$TOOL/hdf5"
      -Dmuparser_ROOT="C:/qtisas_libs/$TOOL/muparser"
      -DTIFF_ROOT="C:/qtisas_libs/$TOOL/tiff"
      -Dyaml-cpp_ROOT="C:/qtisas_libs/$TOOL/yaml_cpp"
      -DZLIB_ROOT="C:/qtisas_libs/$TOOL/zlib"
      -DCMAKE_PREFIX_PATH="C:/Qt/6.8.3/$TOOL"
      -DPython3_ROOT_DIR="C:/Users/$USER/AppData/Local/Programs/Python/Python312"
      -DWITH_PYTHON=ON
    - cmake.exe --build . --config Release

linux:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_ID != "1655"'
  parallel:
    matrix:
      - IMAGE: ["ubuntu20.04:0.0.5", "noble:0.0.6", "rocky9:0.0.13"]
  image: iffregistry.fz-juelich.de/qtisas/qtisas-ci/$IMAGE
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake .. -G"Ninja" -DCMAKE_BUILD_TYPE=Release -DWITH_PYTHON=ON
    - cmake --build . --parallel 4

tag:
  stage: tag
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_ID == "1655"'
  image: alpine/git
  script:
    - git config --global user.name "CI"
    - git config --global user.email "k.kholostov@fz-juelich.de"
    - git_version=$(git describe --tags --abbrev=0)
    - local_version=$(head -n 1 changelog.md | sed 's/^# //')
    - if [ "$local_version" != "$git_version" ]; then git tag $local_version && git push https://$TAGGING@$(echo $CI_PROJECT_URL | sed 's/^https:\/\///').git --tags; fi

obs-release:
  stage: deploy
  image: iffregistry.fz-juelich.de/qtisas/qtisas-ci/util:0.0.7
  only:
    - tags@qtisas/qtisas
  script:
    - cd ..
    - echo "user=$OBS_USER" | tee -a /etc/osc/oscrc >/dev/null
    - echo "pass=$OBS_TOKEN" | tee -a /etc/osc/oscrc >/dev/null
    - mkdir -p ~/.config/osc
    - ln -s /etc/osc/oscrc ~/.config/osc
    - osc co $OBS_PROJECT
    - cp qtisas/linux/_service $OBS_PROJECT
    - osc commit $OBS_PROJECT/_service -m "$CI_COMMIT_TAG"
  allow_failure: true

macos-release:
  stage: deploy
  parallel:
    matrix:
      - { ARCH: "arm64", BREW: "homebrew", QT: "6" }
      - { ARCH: "intel", BREW: "homebrew-x86", QT: "5" }
  tags:
    - darwin, $ARCH, ventura
  only:
    - tags@qtisas/qtisas
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - /opt/$BREW/bin/cmake .. -G"Ninja" -DCMAKE_BUILD_TYPE=Release
      -Dgl2ps_ROOT=/opt/$BREW/opt/gl2ps
      -DGSL_ROOT=/opt/$BREW/opt/gsl
      -DHDF5_ROOT=/opt/$BREW/opt/hdf5
      -Dmuparser_ROOT=/opt/$BREW/opt/muparser
      -DTIFF_ROOT=/opt/$BREW/opt/libtiff
      -Dyaml-cpp_ROOT=/opt/$BREW/opt/yaml-cpp
      -DCMAKE_PREFIX_PATH=/opt/$BREW/opt/qt@$QT -DPREFER_QT=$QT
      -DWITH_PYTHON=ON
      -DPython3_ROOT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/Current
    - /opt/$BREW/bin/cmake --build . --parallel $(sysctl -n hw.ncpu)
    - cd ../bin
    - /opt/$BREW/opt/qt@$QT/bin/macdeployqt qtisas.app -verbose=3 || true
    - |
      if [[ "$QT" == "6" ]]; then
        cp -r /opt/$BREW/opt/qt@$QT/share/qt/plugins qtisas.app/Contents
      fi
    - install_name_tool -change @rpath/libhdf5.310.dylib
      @executable_path/../Frameworks/libhdf5.310.dylib
      qtisas.app/Contents/Frameworks/libhdf5_cpp.310.dylib
    - ver=$(/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/Current/bin/python3 --version | awk '{print $2}' | cut -d. -f1,2)
    - install_name_tool -change @rpath/Python3.framework/Versions/$ver/Python3
        /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Python3
        qtisas.app/Contents/MacOS/qtisas
    - codesign --deep --force --verify --verbose --sign "qtisas" qtisas.app
    - mv qtisas.app ../
    - cd ..
    - if [ -d "/Volumes/qtisas" ]; then hdiutil detach /Volumes/qtisas; fi
    - hdiutil create -size 200m -fs HFS+ -volname "qtisas" -attach ./qtisas.dmg
    - mv qtisas.app /Volumes/qtisas
    - ln -s /Applications /Volumes/qtisas/Applications
    - rm -rf /Volumes/qtisas/.fseventsd
    - hdiutil detach /Volumes/qtisas
    - hdiutil convert ./qtisas.dmg -format UDZO -o qtisas-$CI_COMMIT_TAG-$ARCH.dmg
  artifacts:
    paths:
      - qtisas-$CI_COMMIT_TAG-$ARCH.dmg

windows-release:
  stage: deploy
  parallel:
    matrix:
      - { ARCH: "x64", A: "AMD64", CMPLR: "mingw1120_64", QTTOOL: "mingw_64", USER: "admin", PYTHON: "OFF", NAME: "qtisas" }
      - { ARCH: "x64", A: "AMD64", CMPLR: "mingw1120_64", QTTOOL: "mingw_64", USER: "admin", PYTHON: "ON", NAME: "qtisas-py" }
      - { ARCH: "arm64", A: "ARM64", CMPLR: "llvm1706_arm64", QTTOOL: "llvm_arm64", USER: "jcns", PYTHON: "OFF", NAME: "qtisas" }
      - { ARCH: "arm64", A: "ARM64", CMPLR: "llvm1706_arm64", QTTOOL: "llvm_arm64", USER: "jcns", PYTHON: "ON",  NAME: "qtisas-py" }
  tags:
    - win, $ARCH
  only:
    - tags@qtisas/qtisas
  script:
    - $env:Path = "C:\Qt\Tools\$CMPLR\bin;" + $env:Path
    - $env:Path = "C:\Qt\6.7.3\$QTTOOL\bin;" + $env:Path
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake .. -G"Ninja" -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_C_COMPILER="gcc.exe" -DCMAKE_CXX_COMPILER="g++.exe"
      -Dgl2ps_ROOT="C:/qtisas_libs/$CMPLR/gl2ps"
      -DGSL_ROOT="C:/qtisas_libs/$CMPLR/gsl"
      -DHDF5_ROOT="C:/qtisas_libs/$CMPLR/hdf5"
      -Dmuparser_ROOT="C:/qtisas_libs/$CMPLR/muparser"
      -DTIFF_ROOT="C:/qtisas_libs/$CMPLR/tiff"
      -Dyaml-cpp_ROOT="C:/qtisas_libs/$CMPLR/yaml_cpp"
      -DZLIB_ROOT="C:/qtisas_libs/$CMPLR/zlib"
      -DCMAKE_PREFIX_PATH="C:/Qt/6.7.3/$QTTOOL"
      -DWITH_PYTHON="$PYTHON"
      -DPython3_ROOT_DIR="C:\Users\$USER\AppData\Local\Programs\Python\Python312"
    - cmake --build . --parallel $env:NUMBER_OF_PROCESSORS
    - cd ..
    - copy bin\qtisas.exe win\packages\com.qtisas\data
    - windeployqt.exe win\packages\com.qtisas\data\qtisas.exe
    - mkdir win\packages\com.qtisas\data\icons
    - copy qtisas\icons\qtisas.ico win\packages\com.qtisas\data\icons\qtisas.ico
    - copy "libs\Windows-$A\alglib\bin\libalglib.dll" win\packages\com.qtisas\data\
    - copy "libs\Windows-$A\minigzip\bin\libminigzip.dll" win\packages\com.qtisas\data\
    - copy "libs\Windows-$A\qtexengine\bin\libqtexengine.dll" win\packages\com.qtisas\data\
    - copy "libs\Windows-$A\qwt\bin\libqwt.dll" win\packages\com.qtisas\data\
    - copy "libs\Windows-$A\qwtplot3d\bin\libqwtplot3d.dll" win\packages\com.qtisas\data\
    - copy "libs\Windows-$A\tamuanova\bin\libtamuanova.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\gsl\bin\libgsl.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\gsl\bin\libgslcblas.dll" win\packages\com.qtisas\data\
    - Copy-Item -Path "C:\qtisas_libs\$CMPLR\gsl\include\gsl" -Destination win\packages\com.qtisas\data -Recurse
    - copy "C:\qtisas_libs\$CMPLR\hdf5\bin\libhdf5.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\hdf5\bin\libhdf5_cpp.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\muparser\bin\libmuparser.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\libjpeg\bin\libjpeg-62.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\tiff\bin\libtiff.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\xz\bin\liblzma.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\yaml_cpp\bin\libyaml-cpp.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\zlib\bin\libzlib.dll" win\packages\com.qtisas\data\
    - copy "C:\qtisas_libs\$CMPLR\zstd\bin\libzstd.dll" win\packages\com.qtisas\data\
    - |
      if ($CMPLR -match "llvm") {
          copy "C:\Qt\Tools\$env:CMPLR\bin\libc++.dll" win\packages\com.qtisas\data\
      } else {
          copy "C:\Qt\Tools\$env:CMPLR\bin\libgcc_s_seh-1.dll" win\packages\com.qtisas\data\
          copy "C:\Qt\Tools\$env:CMPLR\bin\libstdc++-6.dll" win\packages\com.qtisas\data\
          copy "C:\Qt\Tools\$env:CMPLR\bin\libwinpthread-1.dll" win\packages\com.qtisas\data\
      }
    - |
      if ($PYTHON -eq "ON") {
          mkdir win\packages\com.qtisas\data\python
          copy qtisas\python\qtisasrc.py win\packages\com.qtisas\data\python
          copy qtisas\python\python-qtiUtil.py win\packages\com.qtisas\data\python
          copy qtisas\python\qti_wordlist.txt win\packages\com.qtisas\data\python
      }
    - C:\Qt\Tools\QtInstallerFramework\4.8\bin\binarycreator.exe -c win\config\config.xml -p win\packages "$NAME-$env:CI_COMMIT_TAG-$ARCH.exe" --verbose
  artifacts:
    paths:
      - $NAME-$CI_COMMIT_TAG-$ARCH.exe

upload:
  stage: upload
  image: curlimages/curl:latest
  only:
    - tags@qtisas/qtisas
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-$CI_COMMIT_TAG-arm64.dmg "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-arm64.dmg"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-$CI_COMMIT_TAG-intel.dmg "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-intel.dmg"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-py-$CI_COMMIT_TAG-arm64.exe "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-py-${CI_COMMIT_TAG}-arm64.exe"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-$CI_COMMIT_TAG-arm64.exe "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-arm64.exe"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-py-$CI_COMMIT_TAG-x64.exe "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-py-${CI_COMMIT_TAG}-x64.exe"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./qtisas-$CI_COMMIT_TAG-x64.exe "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-x64.exe"'
  needs: ["macos-release: [arm64, homebrew, 6]",
          "macos-release: [intel, homebrew-x86, 5]",
          "windows-release: [arm64, ARM64, llvm1706_arm64, llvm_arm64, jcns, OFF, qtisas]",
          "windows-release: [arm64, ARM64, llvm1706_arm64, llvm_arm64, jcns, ON, qtisas-py]",
          "windows-release: [x64, AMD64, mingw1120_64, mingw_64, admin, OFF, qtisas]",
          "windows-release: [x64, AMD64, mingw1120_64, mingw_64, admin, ON, qtisas-py]"]

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags@qtisas/qtisas
  script:
    - echo "Release CI stage for $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: $CI_COMMIT_TAG
    description: 'Release created using the release-cli.'
    assets:
      links:
        - name: 'qtisas-$CI_COMMIT_TAG-arm64.dmg'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-arm64.dmg'
        - name: 'qtisas-$CI_COMMIT_TAG-intel.dmg'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-intel.dmg'
        - name: 'qtisas-$CI_COMMIT_TAG-arm64.exe'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-arm64.exe'
        - name: 'qtisas-py-$CI_COMMIT_TAG-arm64.exe'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-py-${CI_COMMIT_TAG}-arm64.exe'
        - name: 'qtisas-$CI_COMMIT_TAG-x64.exe'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-${CI_COMMIT_TAG}-x64.exe'
        - name: 'qtisas-py-$CI_COMMIT_TAG-x64.exe'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/qtisas-py-${CI_COMMIT_TAG}-x64.exe'
  needs: ["upload"]

sync:
  stage: sync
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_ID == "1655"'
  image: alpine/git
  script:
    - git remote add mirror https://$GITHUB_TOKEN@github.com/k61n/qtisas.git
    - git fetch mirror
    - git push -f mirror HEAD:master
    - git push -f mirror --delete $(git ls-remote --tags mirror | awk -F/ '{print $NF}')
    - git push mirror --tags
